name: Build and Test

on:
  push:
    branches: [main]

jobs:
  build_EMULATOR:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t my-c-python-project .

  build_SIMULATOR:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t my-c-python-project .

  build_EMU_CLEAR:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t my-c-python-project .
      
  build_EMU_ENC:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build Docker Image
      run: docker build -t my-c-python-project .

  test_EMULATOR:
    runs-on: ubuntu-latest
    needs: build_EMULATOR  # This ensures that the test job runs after the build job.

    steps:
    - name: Run Tests
      run: docker run my-c-python-project

  test_SIMULATOR:
    runs-on: ubuntu-latest
    needs: build_SIMULATOR  # This ensures that the test job runs after the build job.

    steps:
    - name: Run Tests
      run: docker run my-c-python-project
  test_EMU_CLEAR:
    runs-on: ubuntu-latest
    needs: build_EMU_CLEAR  # This ensures that the test job runs after the build job.

    steps:
    - name: Run Tests
      run: docker run my-c-python-project
  test_EMU_ENC:
    runs-on: ubuntu-latest
    needs: build_EMU_ENC  # This ensures that the test job runs after the build job.

    steps:
    - name: Run Tests
      run: docker run my-c-python-project
